# services:
#   mysql:
#     image: mysql
#     container_name: mysql-cloud
#     ports:
#       - "3306:3306"
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#     restart: always



# version: '3.8'
# services:
#   api:
#     build: ./api
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - FLASK_APP=app.py
#       - FLASK_RUN_HOST=0.0.0.0
#   db:
#     image: mysql
#     volumes:
#       - db-data:/var/lib/mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: SQLpassword123!
#       MYSQL_DATABASE: cloud_db_a2
#       MYSQL_USER: root
#       MYSQL_PASSWORD: SQLpassword123!
#     ports:
#       - "3306:3306"

# volumes:
#   db-data:
version: '3.8'

services:
  api:
    build: ./api
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0


  db:
    image: mysql:5
    restart: always
    environment:
      MYSQL_DATABASE: 'cloud_db_a2'
      # So you don't have to use root, but you can if you like
      # MYSQL_USER: 'root'
      # You can use whatever password you like
      # MYSQL_PASSWORD: ''
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile # Assuming your Dockerfile is named 'Dockerfile'
    ports:
      - "8082:8082"
    depends_on:
      - api # Assuming the frontend needs to communicate with the API

# Names our volume
volumes:
  my-db: